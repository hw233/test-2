package SanProto;

message FriendInfo {
  optional uint64 user_id = 1;
  optional bytes name = 2;
  optional int32 icon_id = 3;
  optional int32 level = 4;
  optional int32 score = 5;
  optional int32 index = 6;
}

message MessageInfo {
  enum From{
      OWN = 1;
      OTHER = 2;
  }
  required uint64 user_id = 1;
  optional int32 friend_index = 2;
  optional bytes content = 3;
  optional int32 status = 4;
  optional From message_from = 5; 
  optional int32 time = 6;
}
//好友操作返回值
enum RET {
  FRIEND_OK = 0;

  NOTINAPPLY = 1;//输入的id不在好友申请列表中
  NOTINFRIENDS = 2;//不在好友列表中
  FRIENDFULL = 3;//您的好友已满
  FRIENDFULLOTHER = 4;//对方好友已满
  APPLYSUCCEED = 5;//您已成功提交好友申请
  ADDSUCCEED = 6;//您已成功添加对方为好友
  WITHOUTID = 7;//对方ID不存在
  CANNOTCHAT = 8;//您已不在对方好友列表中
  ALREADYIN = 9;//对方已在您的好友列表中
  
}


//推荐好友列表
message GetFriendsReq {
  enum TYPE{
    SEARCH = 1;
    RECOMMEND = 2;
  }
  required uint64 user_id = 1;
  required TYPE type = 2;
  optional uint64 friend_user_id = 3;
}
message GetFriendsRes {
  required int32 status = 1;
  repeated FriendInfo friends = 2;
  optional RET ret = 3;
  optional int32 friend_num = 4; 
}
//添加好友
message AddFriendReq {
  required uint64 user_id = 1;
  required uint64 friend_id = 2;
}
message AddFriendRes {
  required int32 status = 1;
  optional RET ret = 2;
  optional int32 friend_num = 3; 
}
//查询好友请求
message QueryFriendsReq {
  required uint64 user_id = 1;
  optional uint64 friend_user_id = 2;
}
message QueryFriendsRes {
  required int32 status = 1;
  repeated FriendInfo friends = 2; 
  optional RET ret = 3; 
  optional int32 friend_num = 4;
}
//好友管理
message ManageFriendsReq {
  enum STATUS {
    DONE = 1;   //已处理
    ACCEPT = 2; //同意
    REFUSE = 3; //拒绝
    DELETE = 4; //删除
  }
  required uint64 user_id = 1;
  required uint64 friend_id = 2;
  required  STATUS status = 3;
  optional int32  index = 4;
}
message ManageFriendsRes {
  required int32 status = 1;
  optional RET ret = 2; 
  repeated FriendInfo friends = 3; 
  optional int32 friend_num = 4;
}
//查看好友
message ViewFriendsReq {
  required uint64 user_id = 1;
  optional uint64 friend_user_id = 2;
}
message ViewFriendsRes {
  required int32 status = 1;
  repeated FriendInfo friends = 2; 
  optional RET ret = 3;
  repeated MessageInfo messages = 4;
  optional int32 friend_num = 5; 
}
//好友聊天
message ChatFriendReq {
  required uint64 user_id = 1;
  required uint64 friend_id = 2;
  optional int32 friend_index = 3;
  optional bytes content = 4;
}
message ChatFriendRes {
  required int32 status = 1;
  repeated MessageInfo messages = 2; 
  optional RET ret = 3; 
}

message RefreshStatusReq{
  required uint64 user_id = 1;
}
message RefreshStatusRes{
  required int32 status = 1;
  optional int32 chat = 2;
}

