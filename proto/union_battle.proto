import "union.proto";
import "monarch.proto";
import "team.proto";
import "resource.proto";
import "item.proto";
import "battle.proto";
import "conscript.proto";
import "ranking.proto";

package SanProto;

//查询联盟战争详情
message QueryUnionBattleReq {
  required int32 union_id = 1;
}
message QueryUnionBattleRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional UnionBattleInfo battle = 3;
}

//发起联盟战匹配
message LaunchUnionBattleReq {
  required int32 attack_union_id = 1;
  required int32 defend_union_id = 2;
}
message LaunchUnionBattleRes {
  required int32 status = 1;	
}


//部署联盟战争: 派驻防守部队
message DeployUnionBattleReq {
  required uint64 user_id = 1;  //防守方玩家的 id
  required int32 union_id = 2;
  required int32 node_index = 3;
  repeated TeamInfo teams = 4;
}
message DeployUnionBattleRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional UnionBattleInfo battle = 3;
}

//部署联盟战争: 派驻防守部队(指定发起)
message DeployUnionBattleForceReq {
  required int32 union_id = 1;    
  required uint64 user_id = 2;    //防守方玩家的 id
  required int32 node_index = 3;
}
message DeployUnionBattleForceRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional UnionBattleInfo battle = 3;
}


//查询联盟战争中个人信息（战功）
message QueryUnionBattleIndividualsReq {
  required int32 union_id = 1;
  required int32 rival_union_id = 2;
}
message QueryUnionBattleIndividualsRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  repeated UnionBattleIndividualInfo own_side = 3;   //己方联盟玩家信息
  repeated UnionBattleIndividualInfo rival_side = 4; //敌对联盟玩家信息
}

//开始战斗
message StartUnionBattleReq {
  required BATTLE_TYPE type = 1;
  required BattleInputInfo battle = 2;
  required int32 union_id = 3;
  required int32 rival_union_id = 4;
  required uint64 rival_user_id = 5;
  required int32 node_index = 6;
  required int32 node_level = 7;
  optional int32 cost_gold = 8;
}
message StartUnionBattleRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional BattleReward reward = 3;
  optional ResourceInfo resource = 4;
  repeated ConscriptInfo conscripts = 5;
  optional int32 unlock_time = 6;
  optional UnionBattleInfo battle = 7;
}

//结束战斗
message FinishUnionBattleReq {
  required BATTLE_TYPE type = 1;
  optional BattleOutputInfo battle = 2;
  required int32 union_id = 3;
  required int32 rival_union_id = 4;
  required uint64 rival_user_id = 5;
  required int32 node_index = 6;
  required int32 node_level = 7;
  repeated ItemInfo items = 8;
  optional MonarchInfo monarch = 9;

  optional bool is_skip = 10;
}
message FinishUnionBattleRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional UnionBattleInfo battle = 3;  //联盟战争信息
  optional ResourceInfo resource = 4;
  repeated ConscriptInfo conscripts = 5;

  optional BattleOutputInfo battle_output = 6;
  optional MonarchInfo monarch = 7;
}

//领取战功阶段奖励
message AcceptUnionBattleIndividualsReq {
  required int32 union_id = 1;
  required int32 target_step = 2;
}
message AcceptUnionBattleIndividualsRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional ResourceInfo resource = 3; //资源奖励
  repeated ItemInfo items = 4;        //物品奖励
  optional int32 honor = 5;           //联盟荣誉
}

//擂鼓
message DrumForUnionBattleReq {
  required int32 union_id = 1;
  optional ItemInfo item = 2;
  optional int32 gold = 3;
}
message DrumForUnionBattleRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional UnionBattleInfo battle = 3;
}

//刷新攻击次数
message RefreshUnionBattleAttackReq {
  required int32 union_id = 1;
  required int32 gold = 2;
}
message RefreshUnionBattleAttackRes {
  required int32 status = 1;
  optional UNION_RET ret = 2;
}

//尝试进入下一场联盟战争
message TryForwardUnionBattleReq {
  required int32 union_id = 1;
}
message TryForwardUnionBattleRes {
  required int32 status = 1;
  optional bool enable = 2;
  optional int32 attack_union_id = 3;
  optional int32 defence_union_id = 4;
  repeated UnionBattleMapInfo unions = 5;
  repeated UnionBattleIndividualInfo users = 6;   //联盟玩家信息
}

//尝试进入下一个联盟战争赛季
message TryForwardUnionBattleSeasonReq {
}
message TryForwardUnionBattleSeasonRes {
  required int32 status = 1;
  required bool enable = 2;
  repeated RankInfo union_ranking = 3;  //联盟排名
  repeated RankInfo user_ranking = 4;   //玩家排名
  repeated MonarchInfo members = 5;     //玩家信息
}

//发放联盟战争奖励
message AwardForUnionBattleReq {
  enum TYPE {
    UNION = 1;              //联盟战争联盟奖励
    SEASON_UNION = 2;       //联盟赛季联盟排名联盟奖励
    UNION_MEMBER = 3;       //联盟战争胜利联盟成员奖励
    INDIVIDUAL = 4;         //联盟战争个人排名奖励
    SEASON_UNION_MEMBER = 5;//联盟赛季联盟排名成员奖励
    SEASON_INDIVIDUAL = 6;  //联盟赛季个人排名奖励
  }

  required TYPE type = 1;
  optional uint64 user_id = 2;
  optional int32 union_id = 3;
  optional bytes union_name = 4;
  optional bool win = 5;
  optional int32 rival_union_id = 6;
  optional bytes rival_union_name = 7;
  optional int32 ranking = 8;
}
message AwardForUnionBattleRes {
  required int32 status = 1;
}

//领取（刷新）公共宝箱
message QueryUnionBattleBoxReq {
  required int32 union_id = 1;
  optional int32 box_id = 2;
  required int32 rival_union_id = 3;
}
message QueryUnionBattleBoxRes{
  required int32 status = 1;
  optional UNION_RET ret = 2;
  optional BossBoxInfo box = 3;
}
